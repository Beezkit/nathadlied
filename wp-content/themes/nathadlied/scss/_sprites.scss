// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$avatar-nath-name: 'avatar-nath';
$avatar-nath-x: 0px;
$avatar-nath-y: 0px;
$avatar-nath-offset-x: 0px;
$avatar-nath-offset-y: 0px;
$avatar-nath-width: 669px;
$avatar-nath-height: 530px;
$avatar-nath-total-width: 989px;
$avatar-nath-total-height: 530px;
$avatar-nath-image: 'images/sprite.png';
$avatar-nath: (0px, 0px, 0px, 0px, 669px, 530px, 989px, 530px, 'images/sprite.png', 'avatar-nath', );
$down-name: 'down';
$down-x: 772px;
$down-y: 327px;
$down-offset-x: -772px;
$down-offset-y: -327px;
$down-width: 41px;
$down-height: 24px;
$down-total-width: 989px;
$down-total-height: 530px;
$down-image: 'images/sprite.png';
$down: (772px, 327px, -772px, -327px, 41px, 24px, 989px, 530px, 'images/sprite.png', 'down', );
$logo-name: 'logo';
$logo-x: 689px;
$logo-y: 209px;
$logo-offset-x: -689px;
$logo-offset-y: -209px;
$logo-width: 300px;
$logo-height: 98px;
$logo-total-width: 989px;
$logo-total-height: 530px;
$logo-image: 'images/sprite.png';
$logo: (689px, 209px, -689px, -209px, 300px, 98px, 989px, 530px, 'images/sprite.png', 'logo', );
$polygone-name: 'polygone';
$polygone-x: 689px;
$polygone-y: 327px;
$polygone-offset-x: -689px;
$polygone-offset-y: -327px;
$polygone-width: 63px;
$polygone-height: 71px;
$polygone-total-width: 989px;
$polygone-total-height: 530px;
$polygone-image: 'images/sprite.png';
$polygone: (689px, 327px, -689px, -327px, 63px, 71px, 989px, 530px, 'images/sprite.png', 'polygone', );
$sprite-name: 'sprite';
$sprite-x: 689px;
$sprite-y: 0px;
$sprite-offset-x: -689px;
$sprite-offset-y: 0px;
$sprite-width: 300px;
$sprite-height: 189px;
$sprite-total-width: 989px;
$sprite-total-height: 530px;
$sprite-image: 'images/sprite.png';
$sprite: (689px, 0px, -689px, 0px, 300px, 189px, 989px, 530px, 'images/sprite.png', 'sprite', );
$spritesheet-width: 989px;
$spritesheet-height: 530px;
$spritesheet-image: 'images/sprite.png';
$spritesheet-sprites: ($avatar-nath, $down, $logo, $polygone, $sprite, );
$spritesheet: (989px, 530px, 'images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
